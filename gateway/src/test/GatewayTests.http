@baseUrl = http://localhost:8080

### Connect an user (400: missing fields)
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": ""
}

> {% client.global.set("token", response.body) %}

### Connect an user (400 : failed authentication user does not exist)
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "user123"
}

> {% client.global.set("token", response.body) %}

### Create an user (201)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "John Doe",
  "email": "john.doe@example.com",
  "password": "user123"
}

### Create an user (409 : already existing email)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "John Doit",
  "email": "john.doe@example.com",
  "password": "user123"
}

### Create another user (400 : missing fields)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "Marc Evans",
  "email": "",
  "password": "admin123"
}

### Create an administrator (201)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "Marc Evans",
  "email": "marc.evans@example.com",
  "password": "admin123"
}

### Connect an user (401 : wrong password)
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "false"
}

> {% client.global.set("token", response.body) %}

### Connect an user (400 : missing fields)
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": ""
}

> {% client.global.set("token", response.body) %}

### Connect an user (200)
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "john.doe@example.com",
  "password": "user123"
}

> {% client.global.set("token", response.body) %}

### Connect an administrator (200)
POST {{baseUrl}}/login
Content-Type: application/json

{
  "email": "admin@gmail.com",
  "password": "admin123"
}

> {% client.global.set("token2", response.body) %}

### Read one user by his email (401 : unauthenticated user)
GET {{baseUrl}}/users?email=john.doe@example.com

### Read one user by his email (200)
GET {{baseUrl}}/users?email=john.doe@example.com
Authorization: {{token}}

### Read another user by his email (200)
GET {{baseUrl}}/users?email=admin@gmail.com
Authorization: {{token}}

### Read one user by his email (404 : not found user )
GET {{baseUrl}}/users?email=nath@gmail.com
Authorization: {{token}}

### Read one user by his id 1 (200)
GET {{baseUrl}}/users/1
Authorization: {{token}}

### Read one user by his id 2 (200)
GET {{baseUrl}}/users/2
Authorization: {{token}}

### Read one user by his id (401 : unauthenticated user)
GET {{baseUrl}}/users/1

### Read one user by his id (404 : not found user)
GET {{baseUrl}}/users/15
Authorization: {{token}}

### Delete one user by his id (401 : unauthenticated user)
DELETE {{baseUrl}}/users/1

### Delete one user by his id (204)
DELETE {{baseUrl}}/users/2
Authorization: {{token}}

### Delete one user by his id (404 : not found user)
DELETE {{baseUrl}}/users/15
Authorization: {{token}}

### Delete one user by his id (403 : unauthorised action by user)
DELETE {{baseUrl}}/users/2
Authorization: {{token}}

### Delete one user by his id with the administrator (204)
DELETE {{baseUrl}}/users/1

### Update user's name by his id (401 : unauthenticated user)
PATCH {{baseUrl}}/users/1/name
Content-Type: text/plain

Joe Doe

### Update user's name by his id (204)
PATCH {{baseUrl}}/users/2/name
Content-Type: application/json
Authorization: {{token}}

Joe Do

### Update user's name by his id with the administrator (204)
PATCH {{baseUrl}}/users/1/name
Content-Type: text/plain
Authorization: {{token2}}

Joe Doe

### Update user's name by his id (404 : not found user)
PATCH {{baseUrl}}/users/15/name
Content-Type: text/plain
Authorization: {{token}}

Joe Doe

### Update user's email by his id (403 : unauthorised action by user)
PATCH {{baseUrl}}/users/2/name
Content-Type: text/plain
Authorization: {{token}}

Joe Doe

### Update user's role by his id (401 : unauthenticated user)
PATCH {{baseUrl}}/users/1/role
Content-Type: text/plain

admin

### Update user's role by his id (403 : unauthorised action by user)
PATCH {{baseUrl}}/users/1/role
Content-Type: text/plain
Authorization: {{token}}

admin

### Update user's role from user to admin by his id (200)
PATCH {{baseUrl}}/users/1/role
Content-Type: text/plain
Authorization: {{token2}}

admin

### Update user's role from admin to user by his id (200)
PATCH {{baseUrl}}/users/1/role
Content-Type: text/plain
Authorization: {{token2}}

user

### Update user's role by his id (404 : not found user)
PATCH {{baseUrl}}/users/15/role
Content-Type: text/plain
Authorization: {{token2}}

admin

### Update user's password by his id (401 : unauthenticated user)
PATCH {{baseUrl}}/users/2/password
Content-Type: application/json

user456

### Update user's password by his id (204)
PATCH {{baseUrl}}/users/2/password
Content-Type: application/json
Authorization: {{token}}

user456

### Update user's password by his id (403 : unauthorised action by user)
PATCH {{baseUrl}}/users/2/password
Content-Type: text/plain
Authorization: {{token}}

user456

### Update user's password by his id (404 : not found user)
PATCH {{baseUrl}}/users/15/password
Content-Type: text/plain
Authorization: {{token}}

user456

### Update user's password by his id with the administrator (204)
PATCH {{baseUrl}}/users/1/password
Content-Type: text/plain
Authorization: {{token2}}

user123

### Read all user's exploits (401 : unauthenticated user)
GET {{baseUrl}}/users/2/exploits

### Read all user's exploits (200)
GET {{baseUrl}}/users/2/exploits
Authorization: {{token}}

### Read all targets (401 : unauthenticated user)
GET {{baseUrl}}/targets

### Read all targets (200)
GET {{baseUrl}}/targets
Authorization: {{token}}

### Read all targets filtered by the minimum number of servers (200)
GET {{baseUrl}}/targets?minServers=10
Authorization: {{token}}

### Read all targets filtered by the minimum of revenue (200)
GET {{baseUrl}}/targets?minRevenue=200000
Authorization: {{token}}

### Create a target (401 : unauthenticated user)
POST {{baseUrl}}/targets
Content-Type: application/json

{
  "companyName": "TestCompany",
  "domain": "testCompany.be",
  "location": "Paris, France",
  "employees": 300,
  "servers": 20,
  "revenue": 200000.05
}

### Create a target (403 : unauthorised action by user)
POST {{baseUrl}}/targets
Content-Type: application/json
Authorization: {{token}}

{
  "companyName": "TestCompany",
  "domain": "testCompany.be",
  "location": "Paris, France",
  "employees": 300,
  "servers": 20,
  "revenue": 200000.05
}

### Create a target (400 : missing fields)
POST {{baseUrl}}/targets
Content-Type: application/json
Authorization: {{token}}

{
  "companyName": "TestCompany",
  "domain": "",
  "location": "Paris, France",
  "employees": 300,
  "servers": 20
}

### Create a target (201)
POST {{baseUrl}}/targets
Content-Type: application/json
Authorization: {{token2}}

{
  "companyName": "TestCompany",
  "domain": "testCompany.be",
  "location": "Paris, France",
  "employees": 300,
  "servers": 20,
  "revenue": 200000.05
}

### Get one target by its id (401 : unauthenticated user)
GET {{baseUrl}}/targets/1

### Get one target by its id (404 : not found target)
GET {{baseUrl}}/targets/15
Authorization: {{token}}

### Get one target by its id (200)
GET {{baseUrl}}/targets/1
Authorization: {{token}}

### Update a target (401 : unauthenticated user)
PUT {{baseUrl}}/targets/1
Content-Type: application/json

{
  "id": 1,
  "companyName": "CyberCorp",
  "domain": "cybercorp.com",
  "location": "Madrid, Espagne",
  "employees": 100,
  "servers": 10,
  "revenue": 1000000.0
}

### Update a target (403 : unauthorised action by user)
PUT {{baseUrl}}/targets/1
Content-Type: application/json
Authorization: {{token}}

{
  "id": 1,
  "companyName": "CyberCorp",
  "domain": "cybercorp.com",
  "location": "Madrid, Espagne",
  "employees": 100,
  "servers": 10,
  "revenue": 1000000.0
}

### Update a target (400 : missing fields)
PUT {{baseUrl}}/targets/1
Content-Type: application/json
Authorization: {{token2}}

{
  "id": 1,
  "companyName": "CyberCorp",
  "domain": "",
  "location": "Madrid, Espagne",
  "employees": 100,
  "servers": 10
}

### Update a target (404 : not found target)
PUT {{baseUrl}}/targets/15
Content-Type: application/json
Authorization: {{token2}}

{
  "id": 15,
  "companyName": "CyberCorp",
  "domain": "",
  "location": "Madrid, Espagne",
  "employees": 100,
  "servers": 10
}

### Update a target (204)
PUT {{baseUrl}}/targets/1
Content-Type: application/json
Authorization: {{token2}}

{
  "id": 1,
  "companyName": "CyberCorp",
  "domain": "cybercorp.com",
  "location": "Madrid, Espagne",
  "employees": 100,
  "servers": 10,
  "revenue": 1000000.0
}

### Delete a target (401 : unauthenticated user)
DELETE {{baseUrl}}/targets/1

### Delete a target (403 : unauthorised action by user)
DELETE {{baseUrl}}/targets/1
Authorization: {{token}}

### Delete a target (404 : not found target)
DELETE {{baseUrl}}/targets/15
Authorization: {{token2}}

### Delete a target (204)
DELETE {{baseUrl}}/targets/1
Authorization: {{token2}}

### Read all servers by target id (401 : unauthenticated user)
GET {{baseUrl}}/targets/1/servers

### Read all servers by target id (404 : not found target)
GET {{baseUrl}}/targets/15/servers
Authorization: {{token}}

### Read all servers by target id (200)
GET {{baseUrl}}/targets/1/servers
Authorization: {{token}}

### Read all colocated targets (401 : unauthenticated user)
GET {{baseUrl}}/targets/colocated

### Read all colocated targets (200)
GET {{baseUrl}}/targets/colocated
Authorization: {{token}}

### Create a server (401 : unauthenticated user)
POST {{baseUrl}}/servers
Content-Type: application/json

{
  "ipAddress": "192.168.1.25",
  "targetId": 1,
  "serverType": "web",
  "technology": "Apache"
}

### Create a server (400 : missing fields)
POST {{baseUrl}}/servers
Content-Type: application/json
Authorization: {{token}}

{
  "ipAddress": "",
  "targetId": 1,
  "serverType": "web",
  "technology": "Apache"
}

### Create a server (201)
POST {{baseUrl}}/servers
Content-Type: application/json
Authorization: {{token}}

{
  "ipAddress": "192.168.1.25",
  "targetId": 1,
  "serverType": "web",
  "technology": "Apache"
}

### Read one server by its id (401 : unauthenticated user)
GET {{baseUrl}}/servers/1

### Read one server by its id (404 : not found server)
GET {{baseUrl}}/servers/15

### Read one server by its id (200)
GET {{baseUrl}}/servers/1
Authorization: {{token}}

### Update a server (401 : unauthenticated user)
PUT {{baseUrl}}/servers/1
Content-Type: application/json

{
  "id": 1,
  "ipAddress": "192.168.120.2",
  "targetId": 1,
  "serverType": "database",
  "technology": "Apache"
}

### Update a server (400 : missing fields)
PUT {{baseUrl}}/servers/1
Content-Type: application/json
Authorization: {{token}}

{
  "id": 1,
  "ipAddress": "192.168.120.2",
  "targetId": 1,
  "serverType": "database",
  "technology": "Apache"
}

### Update a server (404 : not found server)
PUT {{baseUrl}}/servers/15
Content-Type: application/json
Authorization: {{token}}

{
  "id": 15,
  "ipAddress": "192.168.120.2",
  "targetId": 1,
  "serverType": "database",
  "technology": "Apache"
}

### Update a server (204)
PUT {{baseUrl}}/servers/1
Content-Type: application/json
Authorization: {{token}}

{
  "id": 1,
  "ipAddress": "192.168.120.2",
  "targetId": 1,
  "serverType": "database",
  "technology": "Apache"
}

### Delete a server (401 : unauthenticated user)
DELETE {{baseUrl}}/servers/1

### Delete a server (404 : not found server)
DELETE {{baseUrl}}/servers/15
Authorization: {{token}}

### Delete a server (204)
DELETE {{baseUrl}}/servers/1
Authorization: {{token}}

### Validate a server (401 : unauthenticated user)
PATCH {{baseUrl}}/servers/1/validate

### Validate a server (404 : not found server)
PATCH {{baseUrl}}/servers/15/validate
Authorization: {{token}}

### Validate a server (400 : server already validated)
PATCH {{baseUrl}}/servers/1/validate
Authorization: {{token}}

### Validate a server (403 : unauthorised action by user)
PATCH {{baseUrl}}/servers/1/validate
Authorization: {{token}}

### Validate a server (204)
PATCH {{baseUrl}}/servers/1/validate
Authorization: {{token2}}

### Read all exploits (401 : unauthenticated user)
GET {{baseUrl}}/exploits

### Read all exploits (200)
GET {{baseUrl}}/exploits
Authorization: {{token}}

### Read all exploits filtered by the server type (200)
GET {{baseUrl}}/exploits?serverType=Web
Authorization: {{token}}

### Create an exploit (401 : unauthenticated user)
POST {{baseUrl}}/exploits
Content-Type: application/json

{
  "name": "SQL Injection",
  "description": "Cet exploit permet d'injecter des requêtes SQL malveillantes.",
  "authorId": 1,
  "serverType": "database",
  "guide": "1. Identifier un point d'injection SQL. 2. Injecter la requête malveillante."
}

### Create an exploit (400 : missing fields)
POST {{baseUrl}}/exploits
Content-Type: application/json
Authorization: {{token}}

{
  "name": "SQL Injection",
  "description": "",
  "authorId": 1,
  "serverType": "database",
  "guide": "1. Identifier un point d'injection SQL. 2. Injecter la requête malveillante."
}

### Create an exploit (201)
POST {{baseUrl}}/exploits
Content-Type: application/json
Authorization: {{token}}

{
  "name": "SQL Injection",
  "description": "Cet exploit permet d'injecter des requêtes SQL malveillantes.",
  "authorId": 1,
  "serverType": "database",
  "guide": "1. Identifier un point d'injection SQL. 2. Injecter la requête malveillante."
}

### Read one exploit by its id (401 : unauthenticated user)
GET {{baseUrl}}/exploits/1

### Read one exploit by its id (404 : not found exploit)
GET {{baseUrl}}/exploits/15
Authorization: {{token}}

### Read one exploit by its id (200)
GET {{baseUrl}}/exploits/1
Authorization: {{token}}

### Update an exploit (401 : unauthenticated user)
PUT {{baseUrl}}/exploits/1
Content-Type: application/json

{
  "id": 1,
  "name": "XSS Injection",
  "description": "Cet exploit permet d'injecter des requêtes XSS malveillantes.",
  "authorId": 1,
  "serverType": "database",
  "guide": "1. Identifier un point d'injection XSS. 2. Injecter la requête malveillante."
}

### Update an exploit (400 : missing fields)
PUT {{baseUrl}}/exploits/1
Content-Type: application/json
Authorization: {{token}}

{
  "id": 1,
  "name": "XSS Injection",
  "description": "",
  "authorId": 1,
  "serverType": "database",
  "guide": "1. Identifier un point d'injection XSS. 2. Injecter la requête malveillante."
}

### Update an exploit (404 : not found exploit)
PUT {{baseUrl}}/exploits/15
Content-Type: application/json
Authorization: {{token}}

{
  "id": 15,
  "name": "XSS Injection",
  "description": "",
  "authorId": 1,
  "serverType": "database",
  "guide": "1. Identifier un point d'injection XSS. 2. Injecter la requête malveillante."
}

### Update an exploit (204)
PUT {{baseUrl}}/exploits/1
Content-Type: application/json
Authorization: {{token}}

{
  "id": 1,
  "name": "XSS Injection",
  "description": "Cet exploit permet d'injecter des requêtes XSS malveillantes.",
  "authorId": 1,
  "serverType": "database",
  "guide": "1. Identifier un point d'injection XSS. 2. Injecter la requête malveillante."
}

### Delete an exploit (401 : unauthenticated user)
DELETE {{baseUrl}}/exploits/1

### Delete an exploit (404 : not found exploit)
DELETE {{baseUrl}}/exploits/15
Authorization: {{token}}

### Delete an exploit (204)
DELETE {{baseUrl}}/exploits/1
Authorization: {{token}}

### Validate an exploit (401 : unauthenticated user)
PATCH {{baseUrl}}/exploits/1/validate

### Validate an exploit (403 : unauthorised action by user)
PATCH {{baseUrl}}/exploits/1/validate
Authorization: {{token}}

### Validate an exploit (404 : not found exploit)
PATCH {{baseUrl}}/exploits/15/validate
Authorization: {{token2}}

### Validate an exploit (400 : exploit already validated)
PATCH {{baseUrl}}/exploits/1/validate
Authorization: {{token2}}

### Validate an exploit (204)
PATCH {{baseUrl}}/exploits/1/validate
Authorization: {{token2}}

### Read all attacks (401 : unauthenticated user)
GET {{baseUrl}}/attacks

### Read all attacks (200)
GET {{baseUrl}}/attacks
Authorization: {{token}}

### Create an attack (401 : unauthenticated user)
POST {{baseUrl}}/attacks
Content-Type: application/json

{
  "attackId": 1,
  "targetId": 1
}

### Create an attack (400 : missing fields)
POST {{baseUrl}}/attacks
Content-Type: application/json
Authorization: {{token}}

{
  "attackId": 1,
  "targetId": ""
}

### Create an attack (201)
POST {{baseUrl}}/attacks
Content-Type: application/json
Authorization: {{token}}

{
  "attackId": 1,
  "targetId": 1
}

### Read one attack by its id (401 : unauthenticated user)
GET {{baseUrl}}/attacks/1

### Read one attack by its id (404 : not found attack)
GET {{baseUrl}}/attacks/15
Authorization: {{token}}

### Read one attack by its id (200)
GET {{baseUrl}}/attacks/1
Authorization: {{token}}

### Delete an attack (401 : unauthenticated user)
DELETE {{baseUrl}}/attacks/1

### Delete an attack (404 : not found attack)
DELETE {{baseUrl}}/attacks/15
Authorization: {{token}}

### Delete an attack (204)
DELETE {{baseUrl}}/attacks/1
Authorization: {{token}}

### Update server for an attack
PATCH {{baseUrl}}/attacks/15/server
Content-Type: application/json

{
  "serverId": 213214
}

### Update notes for an attack (401 : unauthenticated user)
PATCH {{baseUrl}}/attacks/1/notes
Content-Type: text/plain

Nécessite une connexion SSH pour accéder au serveur cible.

### Update notes for an attack (404 : not found attack)
PATCH {{baseUrl}}/attacks/15/notes
Content-Type: text/plain
Authorization: {{token}}

Nécessite une connexion SSH pour accéder au serveur cible.

### Update notes for an attack (204)
PATCH {{baseUrl}}/attacks/1/notes
Content-Type: text/plain
Authorization: {{token}}

Nécessite une connexion SSH pour accéder au serveur cible.

### Update server for an attack (401 : unauthenticated user)
PATCH {{baseUrl}}/attacks/1/server
Content-Type: text/plain

1

### Update server for an attack (404 : not found attack)
PATCH {{baseUrl}}/attacks/15/server
Content-Type: text/plain
Authorization: {{token}}

1

### Update server for an attack (400 : server already validated or not found)
PATCH {{baseUrl}}/attacks/1/server
Content-Type: text/plain
Authorization: {{token}}

2

### Update server for an attack (204)
PATCH {{baseUrl}}/attacks/1/server
Content-Type: text/plain
Authorization: {{token}}

1

### Update exploit for an attack (401 : unauthenticated user)
PATCH {{baseUrl}}/attacks/1/exploit
Content-Type: text/plain

1

### Update exploit for an attack (404 : not found attack)
PATCH {{baseUrl}}/attacks/15/exploit
Content-Type: text/plain
Authorization: {{token}}

1

### Update exploit for an attack (400 : exploit already validated or not found)
PATCH {{baseUrl}}/attacks/1/exploit
Content-Type: text/plain
Authorization: {{token}}

2

### Update exploit for an attack (204)
PATCH {{baseUrl}}/attacks/1/exploit
Content-Type: text/plain
Authorization: {{token}}

1

### Launch an attack (401 : unauthenticated user)
PATCH {{baseUrl}}/attacks/1/launch

### Launch an attack (403 : unauthorised action by user)µ
PATCH {{baseUrl}}/attacks/1/launch
Authorization: {{token}}

### Launch an attack (404 : not found attack)
PATCH {{baseUrl}}/attacks/15/launch
Authorization: {{token2}}

### Launch an attack (204)
PATCH {{baseUrl}}/attacks/1/launch
Authorization: {{token2}}

### Launch an attack (400 : attack already launched or exploit or server not defined)
PATCH {{baseUrl}}/attacks/2/launch
Authorization: {{token2}}

### Record an attack result (401 : unauthenticated user)
POST {{baseUrl}}/attacks/1/result
Content-Type: text/plain

terminée

### Record an attack result (403 : unauthorised action by user)
POST {{baseUrl}}/attacks/1/result
Content-Type: text/plain
Authorization: {{token}}

terminée

### Record an attack result (404 : not found attack)
POST {{baseUrl}}/attacks/15/result
Content-Type: text/plain
Authorization: {{token2}}

terminée

### Record an attack result (400 : attack not launched or the result is not valid)
POST {{baseUrl}}/attacks/1/result
Content-Type: text/plain
Authorization: {{token2}}

réussie

### Record an attack result (201)
POST {{baseUrl}}/attacks/1/result
Content-Type: text/plain
Authorization: {{token2}}

terminée
