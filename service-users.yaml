openapi: 3.0.3
info:
  title: Vinci Cyber Intelligence User Service
  description: |
    Microservice de gestion des utilisateurs pour le projet Vinci Cyber Intelligence. 
    Ce service permet aux administrateurs et utilisateurs de créer, lire, modifier et supprimer des 
    utilisateurs dans le système. Il inclut la gestion des informations utilisateur telles que le 
    nom d'utilisateur, le prénom, le nom de famille, et le statut d'administrateur.
  version: 1.0.0
servers:
  - url: 'http://localhost:9005'
    description: Development server

paths:

  /users:
    get:
      summary: Récupérer la liste de tous les utilisateurs
      description: |
        Cette route permet de récupérer la liste de tous les utilisateurs enregistrés dans le système. 
        Les détails incluent leur nom d'utilisateur, prénom, nom, et statut d'administrateur.
      responses:
        200:
          description: Retourne la liste de tous les utilisateurs
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'

  /users/{username}:
    parameters:
      - name: username
        in: path
        description: Nom d'utilisateur unique
        required: true
        schema:
          type: string
          example: hacker01

    get:
      summary: Récupérer les informations d'un utilisateur spécifique
      description: |
        Permet de récupérer les informations complètes d'un utilisateur spécifique grâce à son 
        nom d'utilisateur. Si l'utilisateur n'est pas trouvé, un code d'erreur 404 est retourné.
      responses:
        404:
          description: Aucun utilisateur trouvé avec ce nom d'utilisateur
        200:
          description: Retourne les données de l'utilisateur correspondant
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/user'

    post:
      summary: Créer un nouvel utilisateur
      description: |
        Crée un utilisateur dans le système en fournissant les informations nécessaires telles que 
        le nom d'utilisateur, le prénom, le nom et le statut d'administrateur. Un code 201 indique 
        que la création a été réussie, tandis qu'un code 409 est retourné en cas de conflit.
      requestBody:
        description: Données de l'utilisateur à créer
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/userWithCredentials'
      responses:
        400:
          description: Les données fournies sont invalides
        409:
          description: Un utilisateur existe déjà avec ce nom d'utilisateur
        201:
          description: L'utilisateur a été créé avec succès

    put:
      summary: Modifier les informations d'un utilisateur
      description: |
        Met à jour les informations d'un utilisateur existant, y compris son prénom, son nom de 
        famille et son statut d'administrateur. Si l'utilisateur n'est pas trouvé, un code 404 
        est retourné.
      requestBody:
        description: Nouvelles données de l'utilisateur
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/userWithCredentials'
      responses:
        400:
          description: Les données fournies sont invalides
        404:
          description: Aucun utilisateur trouvé avec ce nom d'utilisateur
        200:
          description: L'utilisateur a été modifié avec succès

    delete:
      summary: Supprimer un utilisateur
      description: |
        Permet de supprimer un utilisateur existant du système en utilisant son nom d'utilisateur.
        Retourne un code 404 si l'utilisateur n'est pas trouvé et un code 200 si la suppression 
        a été effectuée avec succès.
      responses:
        404:
          description: Aucun utilisateur trouvé avec ce nom d'utilisateur
        200:
          description: L'utilisateur a été supprimé avec succès

components:
  schemas:
    user:
      description: |
        Un utilisateur est une personne enregistrée dans le système. Il peut être un administrateur
        ou un utilisateur standard. Les informations de l'utilisateur incluent le nom d'utilisateur,
        le prénom, le nom de famille et le rôle permettant de savoir s'il est un utilisateur standard
        ou un utilisateur administrateur.
      type: object
      properties:
        username:
          type: string
          description: Nom d'utilisateur unique
        firstname:
          type: string
          description: Prénom de l'utilisateur
        lastname:
          type: string
          description: Nom de famille de l'utilisateur
        isAdmin:
          type: boolean
          description: Indique si l'utilisateur est un administrateur (true) ou un utilisateur standard (false)
      example:
        username: "hacker01"
        firstname: "John"
        lastname: "Doe"
        isAdmin: false

    userWithCredentials:
      description: |
        Un utilisateur avec ses informations d'identification est une personne enregistrée comprenant 
        à la fois les informations personnelles et les informations d'authentification pour 
        la création de comptes ou la mise à jour des utilisateurs.
        Il peut être un administrateur ou un utilisateur standard. Les informations de l'utilisateur incluent
        le nom d'utilisateur, le prénom, le nom de famille, le rôle permettant de savoir s'il est un utilisateur
        standard ou un utilisateur administrateur, et le mot de passe.
      type: object
      properties:
        username:
          type: string
          description: Nom d'utilisateur unique
        firstname:
          type: string
          description: Prénom de l'utilisateur
        lastname:
          type: string
          description: Nom de famille de l'utilisateur
        isAdmin:
          type: boolean
          description: Indique si l'utilisateur est un administrateur
        password:
          type: string
          description: Mot de passe de l'utilisateur
      example:
        username: "hacker01"
        firstname: "John"
        lastname: "Doe"
        isAdmin: false
        password: "password123"
