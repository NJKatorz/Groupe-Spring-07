openapi: 3.0.3
info:
  title: Vinci Cyber Intelligence Exploit service
  description: |
    Microservice de gestion des exploits pour le projet Vinci Cyber Intelligence. 
    Ce service est conçu afin de permettre aux hackers de répertorier des vulnérabilités connues et 
    les méthodes pour les exploiter. Les utilisateurs peuvent consulter un liste détaillant des 
    exploits, comprenant dans chacun son nom, sa description, l’auteur, le type serveur vulnérable, 
    un guide permettant de réaliser l’attaque et son statut de validation. Ils peuvent également 
    effectuer des recherches en fonction de l’auteur ou du type de serveur affecté. 
    Chaque utilisateur peut créer et supprimer des exploits, ainsi que de modifier la description 
    et le guide associés. Si un utilisateur possède le rôle d’administrateur, il aura la capacité 
    de valider un exploit.
  version: 1.0.0
servers:
  - url: 'http://localhost:9001'
    description: Development server
paths:

  /exploits:
    get:
      summary: Lire les détails de tous les exploits
      description: |
        Cela permettra à l'utilistateur de récupérer la liste de tous les exploits 
        comprenant les détails tels que leur nom, description, auteur, type de serveur, guide et 
        état de validation. L'utilisateur peut également effectuer des recherches en fonction de
        l'auteur ou du type de serveur vulnérable.
        
        **Paramètres** :
          - `author` : Le nom de l'auteur dont les exploits sont recherchés.
          - `serverType` : Type de serveur pour filtrer les exploits.

      parameters:
        - name: author
          in: query
          description: Nom de l'auteur de l'exploit
          required: false
          schema:
            type: string
            example: Nicolas Jackson
        - name: serverType
          in: query
          description: Type de serveur vulnérable
          required: false
          schema:
            type: string
            example: Backup
      responses:
        200:
          description: Retourne la liste de tous les exploits
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/exploit'

    post:
      summary: Créer un exploit
      description: |
        L'utilisateur peut créer un exploit en fournissant les détails requis tels que
        le nom, la description, l'auteur, le type de serveur, le guide pas à pas et l'état de 
        validation. En cas de succès, l'exploit sera créé. Sinon en cas d'erreur, une réponse
        d'erreur sera retournée.
        
        **Préconditions** :
          - Les informations fournies doivent être valides.
          - Si un exploit avec le même identifiant existe déjà, une erreur sera retournée.
        
        **Corps de la requête** :
          - `name` (requis) : Nom de l'exploit
          - `description` (requis) : Description détaillée de l'exploit
          - `author` (requis) : Auteur de l'exploit
          - `serverType` (requis) : Type de serveur vulnérable à l'exploit
          - `guide` (requis) : Guide pas à pas pour exploiter la vulnérabilité
          - `validated` (optionnel) : Exploit validé ou non par l'administrateur, par défaut `false` si non spécifié.

      requestBody:
        description: Données de l'exploit à créer
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/exploit'
      responses:
        '400':
          description: Données invalides fournies
        409:
          description: Un exploit existe déjà avec cet id
        201:
          description: L'exploit a été créé avec succès

  /exploits/{id}:
    parameters:
      - name: id
        in: path
        description: Identifiant de l'exploit
        required: true
        schema:
          type: integer
          example: 1

    delete:
      summary: Supprimer un exploit sur base de son identifiant
      description: |
        L'utilisateur peut supprimer un exploit existant en fournissant son identifiant unique 
        passé en paramètre dans l'URL. Si l'exploit a été trouvé, il est supprimé. Sinon au cas où 
        l'identifiant n'est pas trouvé, une réponse d'erreur sera retournée.
        
        **Paramètres** :
          - `id` : Identifiant de l'exploit à supprimer.

      responses:
        404:
          description: Aucun exploit n'a été trouvé pour cet identifiant
        200:
          description: L'exploit a été supprimé

    get:
        summary: Lire les détails d'un exploit
        description: |
            Cette opération permet de récupérer les détails d'un exploit spécifique en utilisant son 
            identifiant unique. Si l'exploit n'est pas trouvé, une réponse d'erreur est retournée.
            
            **Paramètres** :
            - `id` : Identifiant de l'exploit à lire.

        responses:
          404:
            description: Aucun exploit n'a été trouvé pour cet identifiant
          200:
            description: Retourne les détails de l'exploit
            content:
              'application/json':
              schema:
                $ref: '#/components/schemas/exploit'

  /exploits/validate/{id}:
    parameters:
      - name: id
        in: path
        description: Identifiant de l'exploit
        required: true
        schema:
          type: integer
          example: 1
    patch:
      summary: Valider un exploit
      description: |
        Seuls les utilisateurs administrateurs peuvent valider un exploit en modifiant 
        son état de validation basé sur son identifiant unique en paramètre dans l'URL. 
        Cela permettra de marquer un exploit comme validé ou non validé. Si l'exploit est trouvé, 
        son état de validation sera modifié. Sinon, une réponse d'erreur sera retournée.
        
        **Paramètres** :
          - `id` : Identifiant de l'exploit à valider ou invalider.

      responses:
        404:
          description: Aucun exploit n'a été trouvé pour cet identifiant
        200:
          description: L'exploit a été validé


  /exploits/description/{id}:
    parameters:
      - name: id
        in: path
        description: Identifiant de l'exploit
        required: true
        schema:
          type: integer
          example: 1

    patch:
      summary: Modifier la description d'un exploit
      description: |
        Cela permettra à l'utilisateur de modifier la description d'un exploit existant en 
        fournissant son identifiant unique passé en paramètre dans l'URL. Si l'exploit est trouvé, 
        sa description est modifiée. Sinon, une réponse d'erreur sera retournée.
        
        **Paramètres** :
          - `id` : Identifiant de l'exploit à modifier.
        
        **Corps de la requête** :
          - `description` : Nouvelle description de l'exploit.

      requestBody:
        description: Nouvelle description de l'exploit correspondante
        content:
          'application/json':
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: Description d'un exploit
      responses:
        '400':
          description: Données invalides fournies
        404:
          description: Aucun exploit n'a été trouvé pour cet identifiant
        200:
          description: La description de l'exploit a été modifiée


  /exploits/guide/{id}:
    parameters:
      - name: id
        in: path
        description: Identifiant de l'exploit
        required: true
        schema:
          type: integer
          example: 1

    patch:
      summary: Modifier le guide d'un exploit
      description: |
        Cela permettra à l'utilisateur de modifier le guide pas à pas d'un exploit existant en 
        fournissant son identifiant unique passé en paramètre dans l'URL. Si l'exploit est trouvé, 
        son guide est modifié. Sinon, une réponse d'erreur sera retournée.
        
        **Paramètres** :
          - `id` : Identifiant de l'exploit.

        **Corps de la requête** :
          - `guide` : Nouveau guide pas à pas pour l'exploit.

      requestBody:
        description: Nouvelle guide de l'exploit correspondante
        content:
          'application/json':
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: Guide pas à pas d'un exploit
      responses:
        '400':
          description: Données invalides fournies
        404:
          description: Aucun exploit n'a été trouvé pour cet identifiant
        200:
          description: La description de l'exploit a été modifiée


components:
  schemas:
    exploit:
      description: |
        Un exploit est une méthode permettant de tirer profit d'une vulnérabilité connue sur 
        un serveur. Il comprend un identifiant unique, un nom, une description, un auteur, 
        un type de serveur, un guide pas à pas pour réaliser l'attaque et un état de validation.
      type: object
      properties:
        exploitId:
          type: integer
          description: Identifiant unique de l'exploit
        name:
          type: string
          description: Nom de l'exploit
        description:
          type: string
          description: Description détaillée de l'exploit, expliquant la vulnérabilité
        author:
          type: string
          description: Auteur de l'exploit, personne ayant découvert la vulnérabilité
        serverType:
          type: string
          description: Type de serveur vulnérable à l'exploit
        guide:
          type: string
          description: Guide pas à pas pour exploiter la vulnérabilité, expliquant les étapes afin
            de réaliser l'attaque
        validated:
          type: boolean
          description: Exploit validé ou non par l'administrateur
      example:
        exploit_id: 1
        name: "Buffer Overflow Attack"
        description: "Exploit visant une vulnérabilité de débordement de mémoire tampon sur les serveurs."
        author: "Nicolas Jackson"
        serverType: "Linux"
        guide: "1) Identifier la taille du tampon. 2) Injecter un code malveillant. 3) Exécuter le payload."
        validated: false